console.clear();
const [ww, wh] = [window.innerWidth, window.innerHeight];

// WebGL Rendering Engine
const renderer = new THREE.WebGLRenderer({ antialias: true });
renderer.setSize(ww, wh);
document.body.appendChild(renderer.domElement);

// New Scene
const scene = new THREE.Scene();
scene.background = new THREE.Color(0xefefef)
scene.fog = new THREE.Fog(0x000000, 250, 1400)

// Perspective Camera
const camera = new THREE.PerspectiveCamera(45, ww/wh, 0.1, 1500);

// Position x,y,z axis of camera
camera.position.set(0, 0, 200);

const controls = new THREE.OrbitControls(camera);

// create the mesh from geometry and material
const loader = new THREE.FontLoader()
loader.load('https://threejs.org/examples/fonts/helvetiker_regular.typeface.json', font => {
  const geometry = new THREE.TextBufferGeometry('#3December', {
    font,
    size: 16,
    height: 12,
  })
  const material = new THREE.MeshPhongMaterial({ color: 0xdcdcdc });
  const mesh = new THREE.Mesh(geometry, material);
  mesh.position.x = -70;
  scene.add(mesh)
})

const dlight = new THREE.DirectionalLight(0xffffff)
const plight = new THREE.PointLight(0xffffff)
plight.position.set(50, 15, 30)

scene.add(dlight)
scene.add(plight)

// render the scene
const render = () => {
  requestAnimationFrame(render);
  controls.update();
  renderer.render(scene, camera);
};

render();